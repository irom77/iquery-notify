input {
    udp {
            port => 11514
            type => "threat"
            workers => 4
            queue_size => 8000 # default 2000
    }
    tcp {
            port => 11666
            type => "debug"
    }
}
######## PALOALTO FILTER #####################
filter {
        if [type] == "threat" or [type] == "debug" {

                grok {
                        match => ["message","%<%{POSINT}>%{MONTH} %{MONTHDAY} %{TIME} %{GREEDYDATA:palo_message}" ]
                }
                mutate {
                    gsub => [
                      "message",",\\\"",","
                    ]
                }
                mutate {
                    gsub => [
                      "message","\\\",",","
                    ]
                    rename => ["palo_message","message"]
                }
                csv {
                    source => "message"
                    columns => ["Domain","ReceiveTime","SerialNum","Type","Threat-ContentType","ConfigVersion","GenerateTime","SourceIP","DestinationIP","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort" ,"Flags","IPprotocol","Action","URL","Threat-ContentName","Category","Severity","Direction","seqno","ActionFlags","SourceLocation","DestinationLocation","cpadding","ContentType","pcap_id","filedigest","cloud","url_idx","user_agent","filetype","xff","referer","sender","subject","recipient","reportid"]
               }
               date {
                   #timezone => "America/New_York"
                   #timezone => "+00:00"
                   match => [ "GenerateTime", "YYYY/dd/MM HH:mm:ss" ]
                   #match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss" ]
                   target => "@timestamp"
                   #add_tag => [ "tsmatch" ]
                   #locale => "UNIX"
               }
               #ruby { code => "event.set('epoc', event.get('@timestamp').to_i - 18000)" }
               mutate {
                   remove_field => ["message"]
               }
               metrics {
                   meter => ["THREAT"]
                   flush_interval => 600
                   clear_interval => 600
                   add_tag => ["Counted"]
               }
       }
       if [type] == "debug" {
               #if [message] !~ /Error|Critical/ {
                    #drop { }
               #}
       }
}

output {
        if [type] == "threat" {
                #file {
                  #path => "/opt/threat.log"
                #}
                #stdout { codec => rubydebug }
                influxdb {
                  data_points => {"SrcIP" => "%{SourceIP}" "DstIP" => "%{DestinationIP}" "DstPort" => "%{DestinationPort}" "App" => "%{Application}" "Action" => "%{Action}" "ThreatType" => "%{Threat-ContentType}" "Rule" => "%{Rule}" "URL" => "%{URL}" "ThreatName" => "%{Threat-ContentName}" "Severity" => "%{Severity}"}
                  #send_as_tags => ["Action","Threat-ContentType","Application","Rule"]
                  #use_event_fields_for_data_points => true
                  #host => "10.29.21.200"
                  #host => "10.73.21.205"
                  host => "influx"
                  db => "syslog"
                  user => "firewall"
                  password => "n3w@yn"
                  #allow_time_override => true
                  retention_policy => "one_week"
                }
        }
        if [type] == "debug" {
                stdout { codec => rubydebug }
                exec {
                  command => "iquery-notify -time=60 -from=logstash@commonwealth.com -to=iromaniuk@commonwealth.com"

                }
                #email {
                    #from => "logstash@commonwealth.com"
                    #subject => "%{Type}"
                    #to => "iromaniuk@commonwealth.com"
                    #via => "smtp"
                    #address => "10.34.17.44"
                    #htmlbody => "<b>Time</b> => %{GenerateTime} <b>Source</b> => %{SourceIP} <b>Destination</b> => %{DestinationIP} <b>Port</b> => %{DestinationPort} <b>Application</b> => %{Application} <b>Action</b> => %{Action} <b>Threat-ContentType</b> => %{Threat-ContentType} <b>URL</b> => %{URL}"
                    #}

        }
        if "Counted" in [tags] {
          #stdout { codec => rubydebug }
          if [THREAT][count] > 10 {
            #stdout { codec => line {format => "rate: %{[THREAT][rate_1m]}"}}
            stdout { codec => rubydebug }
            email {
                    from => "logstash@commonwealth.com"
                    subject => "THREAT count: %{[THREAT][count]} in last 10 min"
                    to => "iromaniuk@commonwealth.com"
                    via => "smtp"
                    address => "10.34.17.44"
                    htmlbody => "<b>1 min rate: </b>%{[THREAT][rate_1m]} <hr><h3 style=\"color:red\">Verify in Panorama -> Monitor -> Threat</h3>"
            }
            exec {
                  command => "iquery-notify -time=10 -from=logstash@commonwealth.com -to=secops@commonwealth.com"
                }
          }
        }
}