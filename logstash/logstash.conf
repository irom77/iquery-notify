input {
    udp {
            port => 11514
            type => "threat"
            workers => 4
            queue_size => 8000 # default 2000
    }
}
######## PALOALTO FILTER #####################
filter {
        if [type] == "threat" {
                grok {
                        match => ["message","%<%{POSINT}>%{MONTH} %{MONTHDAY} %{TIME} %{GREEDYDATA:palo_message}" ]
                }
                mutate {
                    gsub => [
                      "message",",\\\"",","
                    ]
                }
                mutate {
                    gsub => [
                      "message","\\\",",","
                    ]
                    rename => ["palo_message","message"]
                }
                csv {
                    source => "message"
                    columns => ["Domain","ReceiveTime","SerialNum","Type","Threat-ContentType","ConfigVersion","GenerateTime","SourceIP","DestinationIP","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort" ,"Flags","IPprotocol","Action","URL","Threat-ContentName","Category","Severity","Direction","seqno","ActionFlags","SourceLocation","DestinationLocation","cpadding","ContentType","pcap_id","filedigest","cloud","url_idx","user_agent","filetype","xff","referer","sender","subject","recipient","reportid"]
                }
                date {
                    match => [ "GenerateTime", "YYYY/dd/MM HH:mm:ss" ]
                    target => "@timestamp"
                }
                mutate {
                    remove_field => ["message"]
                }
                metrics {
                    meter => ["THREAT"]
                    flush_interval => 600
                    clear_interval => 600
                    add_tag => ["Counted"]
               }
       }
}

output {
        if [type] == "threat" {
                influxdb {
                  data_points => {"SrcIP" => "%{SourceIP}" "DstIP" => "%{DestinationIP}" "DstPort" => "%{DestinationPort}" "App" => "%{Application}" "Action" => "%{Action}" "ThreatType" => "%{Threat-ContentType}" "Rule" => "%{Rule}" "URL" => "%{URL}" "ThreatName" => "%{Threat-ContentName}" "Severity" => "%{Severity}"}
                  host => "influx"
                  db => "syslog"
                  user => "firewall"
                  password => "password"
                  retention_policy => "one_week"
                }
        }
        if "Counted" in [tags] {
          if [THREAT][count] > 10 {
            stdout { codec => rubydebug }
            exec {
                  command => "iquery-notify -time=10 -from=logstash@com.com -to=secops@com.com"
                }
          }
        }
}